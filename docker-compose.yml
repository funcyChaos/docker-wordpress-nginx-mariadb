services:
  wordpress:
    image: wordpress:php8.0-fpm
    container_name: wordpress
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      VIRTUAL_HOST: ${DOMAIN}
    volumes:
      - ./wordpress:/var/www/html
    networks:
      - wp-network

  wpcli:
    image: wordpress:cli
    container_name: wp-cli
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
    volumes:
      - ./wordpress:/var/www/html
    depends_on:
      - wordpress
      - db
    entrypoint: ["wp"]
    networks:
      - wp-network

  db:
    image: mariadb:latest
    container_name: wordpress_db
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - wp-network

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80" # Expose HTTP port
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      DEFAULT_HOST: ${DOMAIN}
    networks:
      - wp-network

volumes:
  db_data:

networks:
  wp-network:
    driver: bridge
